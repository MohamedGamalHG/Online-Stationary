<?php


namespace OnlineStationary\Product\Requests;


use Illuminate\Contracts\Validation\Validator;
use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Http\Exceptions\HttpResponseException;
use Illuminate\Validation\ValidationException;
use Symfony\Component\HttpFoundation\JsonResponse;

class ProductRequest extends FormRequest
{
    public function authorize()
    {
        return true;
    }
    public function rules()
    {
        return [
                'product_name'          => 'required|String|min:3|regex:/[a-zA-Z]/',
                'product_price'         => 'required|integer|regex:/[0-9]/',
                'product_quantity'      => 'required|integer',
                'product_details'       => 'required|String|regex:/[a-z]/',
                'category'              => 'required'
        ];
    }

    protected function failedValidation(Validator $validator)
    {
        //return 'from faild';
        $errors = (new ValidationException($validator))->errors();
        //return dd($errors);
        if(!empty($errors))
        {
            $transform  = [];
            foreach ($errors as $filed => $name)
            {
                $transform = [
                    $filed => $name[0]
                ];
            }
            throw new HttpResponseException(
                response()->json([
                    'status'    => false,
                    'errors'    => $transform
                ],
                    JsonResponse::HTTP_BAD_REQUEST
                )
            );

        }
    }

   /* public function messages()
    {
        //return ['product_name.required' => 'is done'];
        //return parent::messages(); // TODO: Change the autogenerated stub
    }*/

}
